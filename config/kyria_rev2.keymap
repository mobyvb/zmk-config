/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Layer aliases
#define DEF 0
#define NUM 1
#define SYM 2
#define FUN 3

cond_layers {
	compatible = "zmk,conditional-layers";
	// Define FUN layer as tri-state
	func_tristate {
		if-layers = <NUM SYM>;
		then-layer = <FUN>;
	};
};

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			label = "DEF";
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ~ `  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   		|  U    |  I    |  O   	|   P   |   \  |
// |  ctrl |  A  |  S  |  D   |  F   |  G   |                                          |  H   		|  J    |  K    |  L   	|   ;   |   '  |
// |  caps |  Z  |  X  |  C   |  V   |  B   | esc     	 | del     |         |         |  N   		|  M    |  ,    |  .   	|   /   |      |
//                     | GUI  | ALT  | RET  |  SPACE/SYM | shift   | 		 |  shift  |  SPACE/NUM | TAB  | BSPC  	| R-ALT |

			bindings = <
	&kp GRAVE   &kp Q &kp W &kp E 		&kp R 		&kp T                                                				&kp Y 	&kp U  		&kp I     &kp O   &kp P    &kp BSLH
	&kp LCTRL   &kp A &kp S &kp D 		&kp F 		&kp G                                                				&kp H 	&kp J  		&kp K     &kp L   &kp SEMI &kp SQT
	&kp CAPS 	&kp Z &kp X &kp C 		&kp V 		&kp B 	&kp ESC 		&kp DEL       &none 		&none 			&kp N 	&kp M  		&kp COMMA &kp DOT &kp FSLH &none
	                 		&kp LGUI 	&kp LALT 	&kp RET &lt SYM SPACE 	&kp LSHIFT    &kp RSHIFT  	&lt NUM SPACE  	&kp TAB &kp BSPC 	&kp RALT
			>;

		};

		number_layer {
			label = "NUM";
// ---------------------------------------------------------------------------------------------------------------------------------
// | volup |     |prev | play | next |      |                                          |      |       |       |      |       | brightup |
// | voldn |  1  |  2  |  3   |  4   |  5   |                                          |  6   |  7    |  8    |  9   |   0   | brightdn |
// |  mute |     |     |      |      |      |         |         |  |         |         | left | down  |  up   |right |       |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&kp C_VOL_UP	&trans &kp C_PREV 	&kp C_PLAY_PAUSE 	&kp C_NEXT 	&trans                         				&trans 		&trans 		&trans 	&trans  	&trans  &kp C_BRI_INC
	&kp C_VOL_DN   	&kp N1 &kp N2 		&kp N3 				&kp N4 		&kp N5                                      &kp N6 		&kp N7  	&kp N8  &kp N9   	&kp N0 	&kp C_BRI_DEC
	&kp C_MUTE 		&trans &trans 		&trans 				&trans 		&trans &trans &trans        &trans &trans 	&kp LEFT 	&kp DOWN  	&kp UP 	&kp RIGHT 	&trans 	&trans
	                 					&trans  			&trans 		&trans &trans &trans        &trans &trans 	&trans 		&trans 		&trans
			>;

		};

		symbol_layer {
			label = "SYM";
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  !  |  @  |  {   |  }   |  |   |                                          |      |       |       |      |       |      |
// |       |  #  |  $  |  (   |  )   |      |                                          |  +   |  -    |  /    |  *   |   %   |      |
// |       |  %  |  ^  |  [   |  ]   |      |         |         |  |         |         |  &   |  =    |       |      |       |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&trans	&kp EXCL 	&kp AT 		&kp LBRC 	&kp RBRC 	&kp PIPE                         				&trans 		&trans  	&trans   	&trans   	&trans    	&trans
	&trans  &kp HASH 	&kp DLLR 	&kp LPAR 	&kp RPAR 	&trans                         					&kp PLUS 	&kp MINUS  	&kp FSLH    &kp STAR   	&kp PERCENT &trans
	&trans  &kp PERCENT &kp CARET 	&kp LBKT 	&kp RBKT 	&trans 	&trans &trans          &trans &trans 	&kp AMPS 	&kp EQUAL 	&trans 		&trans 		&trans 		&trans
	                  				&trans 		&trans 		&trans 	&trans &trans          &trans &trans 	&trans 		&trans 		&trans
			>;

		};

		fn_layer {
			label = "FUN";
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                                          |      |       |       |      |       |      |
// |  f1   | f2  | f3  | f4   | f5   |  f6  |                                          | f7   |  f8   |  f9   | f10  |  f11  | f12  |
// |       |     |     |      |      |      |         |         |  |         |         |      |       |       |      |       |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&trans   &trans	&trans 	&trans &trans &trans                                   		&trans &trans 	&trans 	&trans 	&trans 	&trans     
	&kp F1   &kp F2 &kp F3 	&kp F4 &kp F5 &kp F6                                      	&kp F7 &kp F8  	&kp F9  &kp F10 &kp F11 &kp F12
	&trans   &trans &trans 	&trans &trans &trans &trans &trans          &trans &trans 	&trans &trans 	&trans 	&trans 	&trans 	&trans     
	                 		&trans &trans &trans &trans &trans          &trans &trans 	&trans &trans 	&trans
			>;

		};
	};
};
